buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.5.4'
    }
}
apply plugin: 'android'

configurations {
    apt
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext.androidAnnotationsVersion = '3.0-SNAPSHOT'

dependencies {
    compile "com.android.support:support-v4:13.0.0"
    compile "com.googlecode.android-query:android-query:0.25.9"
	compile "org.apache.commons:commons-lang3:3.1"
	compile "org.springframework.android:spring-android-rest-template:1.0.1.RELEASE"
    compile "com.fasterxml.jackson.core:jackson-databind:2.2.2"
	compile "org.androidannotations:androidannotations-api:${androidAnnotationsVersion}"
	compile "com.j256.ormlite:ormlite-android:4.45"
    apt "org.androidannotations:androidannotations:${androidAnnotationsVersion}"
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 18
    }

    applicationVariants.all { variant ->
        def aptOutputDir = project.file("build/source/apt")
		def aptOutput = new File(aptOutputDir, variant.dirName)

		android.sourceSets[new File(variant.dirName).getName()].java.srcDirs+= aptOutput.getPath()

	    variant.javaCompile.options.compilerArgs += [
			'-processorpath', configurations.apt.getAsPath(),
			'-AandroidManifestFile=' + variant.processResources.manifestFile,
			'-s', aptOutput
		]

		variant.javaCompile.source = variant.javaCompile.source.filter { p ->
			return !p.getPath().startsWith(aptOutputDir.getPath())
		}

		variant.javaCompile.doFirst {
			aptOutput.mkdirs()
		}
	}
}

task launchDebug(dependsOn: 'installDebug') << {
	"adb shell am start -n fr.ydelouis.selfoss/.activity.MainActivity_".execute()
}

task clearData << {
	"adb shell pm clear fr.ydelouis.selfoss".execute()
}
